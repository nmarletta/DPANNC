/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation ("org.xerial:sqlite-jdbc:3.41.2.1")

    implementation("org.apache.commons:commons-math3:3.6.1")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    // Define the main class for the application.
    mainClass = "dpannc.Main"
    // mainClass = "dpannc.EXP.AIMNexperiments"
    // applicationDefaultJvmArgs = listOf(
    //     "-Xms1g", // Initial heap size
    //     "-Xmx8g"    // Max heap size
    // )
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named<JavaExec>("run") {
    // Force working directory to be the project root
    systemProperty("user.dir", rootProject.projectDir.toString())
}

tasks.withType(JavaExec).all {
    console = org.gradle.api.tasks.ConsoleOutput.Plain
}

